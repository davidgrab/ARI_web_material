knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("/home/livio/Downloads")
dati=read.csv("npi.csv")
str(dati)
dati$Informazioni.cronologiche=NULL
table(dati$X)
dati=dati[dati$X!="NON ACCETTO DI PARTECIPARE ALLA RACCOLTA DATI",]
table(dati$X1)
table(dati$X2)
table(dati$X3)
table(dati$X4)
table(dati$X5)
table(dati$X6)
table(dati$X7)
table(dati$X8)
table(dati$X9)
table(dati$X10)
table(dati$X11)
table(dati$X13)
dati$X1=factor(dati$X1)
levels(dati$X1)=c("0","1")
dati$X1=as.numeric(as.character(dati$X1))
library(pander)
pander(table(dati$X1))
prop.table(table(dati$x1))
barplot(table(dati$X1))
dati$X2=factor(dati$X2)
levels(dati$X2)
levels(dati$X2)=c("0","1")
pander(table(dati$X2))
barplot(table(dati$X2))
levels(dati$X3)
levels(dati$X3)=c("1","0")
dati$X3=as.numeric(as.character(dati$X3))
barplot(table(dati$X3))
dati$X3
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
dati=read.csv("npi.csv")
str(dati)
dati$Informazioni.cronologiche=NULL
table(dati$X)
dati=dati[dati$X!="NON ACCETTO DI PARTECIPARE ALLA RACCOLTA DATI",]
table(dati$X1)
table(dati$X2)
table(dati$X3)
table(dati$X4)
table(dati$X5)
table(dati$X6)
table(dati$X7)
table(dati$X8)
table(dati$X9)
table(dati$X10)
table(dati$X11)
table(dati$X12)
table(dati$X13)
dati$X1=factor(dati$X1)
levels(dati$X1)
levels(dati$X1)=c("0","1")
dati$X1=as.numeric(as.character(dati$X1))
library(pander)
pander(table(dati$X1))
prop.table(table(dati$x1))
barplot(table(dati$X1))
dati$X2=factor(dati$X2)
levels(dati$X2)
levels(dati$X2)=c("0","1")
dati$X2=as.numeric(as.character(dati$X2))
pander(table(dati$X2))
barplot(table(dati$X2))
dati$X3=factor(dati$X3)
levels(dati$X3)
levels(dati$X3)=c("1","0")
dati$X3=as.numeric(as.character(dati$X3))
pander(table(dati$X3))
barplot(table(dati$X3))
dati$X4=factor(dati$X4)
levels(dati$X4)
levels(dati$X4)=c("0","1")
dati$X4=as.numeric(as.character(dati$X4))
pander(table(dati$X4))
barplot(table(dati$X4))
dati$X5=factor(dati$X5)
levels(dati$X5)=c("1","0")
dati$X5=as.numeric(as.character(dati$X5))
pander(table(dati$X5))
barplot(table(dati$X5))
dati$X6=factor(dati$X6)
levels(dati$X6)=c("1","0")
dati$X6=as.numeric(as.character(dati$X6))
pander(table(dati$X6))
barplot(table(dati$X6))
levels(dati$X7)
levels(dati$X7)=c("1","0")
pander(table(dati$X7))
dati$X7=factor(dati$X7)
levels(dati$X7)
levels(dati$X7)=c("1","0")
dati$X7=as.numeric(as.character(dati$X7))
pander(table(dati$X7))
barplot(table(dati$X7))
dati$X8=factor(dati$X8)
levels(dati$X8)
levels(dati$X8)=c("0","1")
dati$X8=as.numeric(as.character(dati$X8))
pander(table(dati$X8))
barplot(table(dati$X8))
dati$X9=factor(dati$X9)
levels(dati$X9)
levels(dati$X9)=c("0","1")
dati$X9=as.numeric(as.character(dati$X9))
pander(table(dati$X9))
barplot(table(dati$X9))
dati$X10=factor(dati$X10)
levels(dati$X10)
levels(dati$X10)=c("1","0")
dati$X10=as.numeric(as.character(dati$X10))
pander(table(dati$X10))
barplot(table(dati$X10))
dati$X11=factor(dati$X11)
levels(dati$X11)
levels(dati$X11)=c("0","1")
pander(table(dati$X11))
barplot(table(dati$X11))
dati$X12=factor(dati$X12)
levels(dati$X12)=c("0","1")
dati$X12=as.numeric(as.character(dati$X12))
pander(table(dati$X12))
barplot(table(dati$X12))
levels(dati$X13)
levels(dati$X13)=c("1","0")
pander(table(dati$X13))
dati$X13=factor(dati$X13)
levels(dati$X13)
levels(dati$X13)=c("1","0")
pander(table(dati$X13))
barplot(table(dati$X13))
pander(table(dati$leadership))
hist(dati$leadership, (-1:13)+.5)
pander(summary(dati$leadership))
dati$leadership=dati$X3+dati$X6+dati$X9+dati$X12
pander(table(dati$leadership))
hist(dati$leadership, (-1:13)+.5)
pander(summary(dati$leadership))
sd(dati$leadership)
IQR(dati$leadership)
dati$grandiose=dati$X2+dati$X5+dati$X8+dati$X11+dati$X13
dati$grandiose=dati$X2+dati$X5+dati$X8+dati$X11+dati$X13
pander(table(dati$grandiose))
dati$grandiose
dati$X2
dati$X5
dati$X8
dati$X11
dati$X13
barplot(tabp,xlab="Entitlement",ylab="Appagamento",legend.text=TRUE)
tab=table(dati$appagamento,dati$entitlement)
pander(tab)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
dati=read.csv("npi.csv")
dati=read.csv("npi.csv")
str(dati)
str(dati)
dati$Informazioni.cronologiche=NULL
table(dati$X)
dati=dati[dati$X!="NON ACCETTO DI PARTECIPARE ALLA RACCOLTA DATI",]
table(dati$X1)
table(dati$X2)
table(dati$X2)
table(dati$X3)
table(dati$X4)
table(dati$X5)
table(dati$X6)
table(dati$X7)
table(dati$X6)
table(dati$X7)
table(dati$X8)
table(dati$X9)
table(dati$X1)
table(dati$X2)
table(dati$X3)
table(dati$X4)
table(dati$X5)
table(dati$X6)
table(dati$X7)
table(dati$X8)
table(dati$X9)
table(dati$X10)
table(dati$X13)
table(dati$X13)
dati$X1=factor(dati$X1)
levels(dati$X1)
dati$X1=as.numeric(as.character(dati$X1))
pander(table(dati$X1))
prop.table(table(dati$x1))
dati$X2=factor(dati$X2)
levels(dati$X2)
levels(dati$X2)=c("0","1")
pander(table(dati$X1))
dati$X1
dati$Informazioni.cronologiche=NULL
dati=read.csv("npi.csv")
dati$Informazioni.cronologiche=NULL
dati=dati[dati$X!="NON ACCETTO DI PARTECIPARE ALLA RACCOLTA DATI",]
table(dati$X2)
table(dati$X3)
table(dati$X5)
table(dati$X7)
table(dati$X9)
table(dati$X10)
table(dati$X12)
table(dati$X13)
levels(dati$X1)
dati$X1=as.numeric(as.character(dati$X1))
prop.table(table(dati$x1))
barplot(table(dati$X1))
dati$X2=factor(dati$X2)
levels(dati$X2)=c("0","1")
install.packages("neuRosim")
library("neuRosim")
design <- simprepTemporal(totaltime=200, onsets=seq(1,200,40),
durations=20, TR=2, effectsize=1, hrf="double-gamma")
ts <- simTSfmri(design=design, SNR=1, noise="white")
plot(ts, type="l")
design <- simprepTemporal(totaltime=200, onsets=seq(1,200,40),
durations=20, TR=2, effectsize=1, hrf="double-gamma")
region <- simprepSpatial(regions=2, coord=list(c(32,15),c(57,45)),
radius=c(10,7), form="sphere")
out <- simVOLfmri(design=design, image=region, dim=c(64,64),
SNR=1, noise="none")
## Not run: plot(out[32,15,], type="l")
design <- simprepTemporal(totaltime=200, onsets=seq(1,200,40),
durations=20, TR=2, effectsize=1, hrf="double-gamma")
region <- simprepSpatial(regions=2, coord=list(c(32,15),c(57,45)),
radius=c(10,7), form="sphere")
out <- simVOLfmri(design=design, image=region, dim=c(64,64),
SNR=1, noise="none")
plot(out[32,15,], type="l")
str(region)
design <- simprepTemporal(totaltime=200, onsets=seq(1,200,40),
durations=20, TR=2, effectsize=1, hrf="double-gamma")
region <- simprepSpatial(regions=2, coord=list(c(32,15,10),c(57,45,10)),
radius=c(10,7), form="sphere")
out <- simVOLfmri(design=design, image=region, dim=c(64,64,64),
SNR=1, noise="none")
plot(out[32,15,], type="l")
plot(out[32,15,,], type="l")
out <- simVOLfmri(design=design, image=region, dim=c(64,64,10),
SNR=1, noise="none")
matplot(out[32,15,,], type="l")
matplot(t(out[32,15,,]), type="l")
region <- simprepSpatial(regions=2, coord=list(c(32,15,10),c(57,45,10)),
radius=c(10,7), form="sphere")
out <- simVOLfmri(design=design, image=region, dim=c(64,64,10),
SNR=1, noise="none")
matplot(t(out[32,15,,]), type="l")
matplot(t(out[32,15,10,]), type="l")
plot((out[32,15,10,]), type="l")
plot((out[32,15,9,]), type="l")
plot((out[10,10,9,]), type="l")
out[10,10,9,]
out <- simVOLfmri(design=design, image=region, dim=c(64,64,10),
SNR=1, noise="white")
plot((out[32,15,10,]), type="l")
plot((out[10,10,9,]), type="l")
matplot(t(out[32,15,10,]), type="l")
matplot(t(out[32,15,,]), type="l")
matplot(t(out[32,16,,]), type="l")
matplot(t(out[31,16,,]), type="l")
design <- simprepTemporal(totaltime=200, onsets=seq(1,200,40),
durations=20, TR=2, effectsize=1, hrf="double-gamma")
region <- simprepSpatial(regions=2, coord=list(c(32,15),c(57,45)),
radius=c(10,7), form="sphere", fading=TRUE)
out <- simVOLfmri(design=design, image=region, dim=c(64,64),
SNR=1, noise="none")
## Not run: plot(out[32,15,], type="l")
## Not run: library(lattice)
library(gplots)
levelplot(out[,,10],scales=list(tck=0),
col.regions=colorpanel(50,high="white",low="black"))
out
str(out)
library(lattice)
library(gplots)
levelplot(out[,,10],scales=list(tck=0),
col.regions=colorpanel(50,high="white",low="black"))
region <- simprepSpatial(regions=2, coord=list(c(32,15),c(57,45)),
radius=c(0,0), form="sphere", fading=TRUE)
out <- simVOLfmri(design=design, image=region, dim=c(64,64),
SNR=1, noise="none")
library(lattice)
library(gplots)
levelplot(out[,,10],scales=list(tck=0),
col.regions=colorpanel(50,high="white",low="black"))
region <- simprepSpatial(regions=2, coord=list(c(32,15),c(57,45)),
radius=c(0,0), form="manual", fading=TRUE)
out <- simVOLfmri(design=design, image=region, dim=c(64,64),
SNR=1, noise="none")
plot(out[32,15,], type="l")
plot(out[10,1,], type="l")
out <- simVOLfmri(design=design, image=region, dim=c(64,64),
SNR=1, noise="white")
plot(out[10,1,], type="l")
region <- simprepSpatial(regions=2, coord=list(c(32,15),c(57,45)),
radius=c(0,0), form="sphere", fading=TRUE)
out <- simVOLfmri(design=design, image=region, dim=c(64,64),
SNR=1, noise="white")
plot(out[10,1,], type="l")
library(lattice)
library(gplots)
levelplot(out[,,10],scales=list(tck=0),
col.regions=colorpanel(50,high="white",low="black"))
region <- simprepSpatial(regions=2, coord=list(c(32,15),c(57,45)),
radius=c(10,7), form="sphere", fading=TRUE)
out <- simVOLfmri(design=design, image=region, dim=c(64,64),
SNR=1, noise="white")
plot(out[10,1,], type="l")
library(lattice)
library(gplots)
levelplot(out[,,10],scales=list(tck=0),
col.regions=colorpanel(50,high="white",low="black"))
levelplot(out[,,1],scales=list(tck=0),
col.regions=colorpanel(50,high="white",low="black"))
levelplot(out[,,25],scales=list(tck=0),
col.regions=colorpanel(50,high="white",low="black"))
plot(out[10,1,], type="l")
plot(out[32,15,], type="l")
levelplot(out[,,20],scales=list(tck=0),
col.regions=colorpanel(50,high="white",low="black"))
levelplot(out[,,50],scales=list(tck=0),
col.regions=colorpanel(50,high="white",low="black"))
region <- simprepSpatial(regions=2, coord=list(c(32,15),c(57,45)),
radius=c(2,3), form="sphere", fading=TRUE)
out <- simVOLfmri(design=design, image=region, dim=c(64,64),
SNR=1, noise="white")
plot(out[10,1,], type="l")
plot(out[32,15,], type="l")
library(lattice)
library(gplots)
levelplot(out[,,50],scales=list(tck=0),
col.regions=colorpanel(50,high="white",low="black"))
design <- simprepTemporal(totaltime=200, onsets=seq(1,200,40),
durations=20, TR=2, effectsize=1, hrf="double-gamma")
region <- simprepSpatial(regions=2, coord=list(c(32,15,10),c(57,45,10)),
radius=c(10,7), form="sphere")
out <- simVOLfmri(design=design, image=region, dim=c(64,64,10),
SNR=1, noise="white")
RNifti::writeNifti(out,file="prova.nii")
out <- simVOLfmri(design=design, image=region, dim=c(64,64,30),
SNR=1, noise="white")
RNifti::writeNifti(out,file="prova.nii")
str(out)
path <- system.file("extdata", "example.nii.gz", package="RNifti")
path
path <- system.file("extdata", "pvalue.nii.gz", package="vci")
path
vignette("roxygen2")
setwd("~/github/cherry_brain/vci")
roxygen2::roxygenise("~/github/cherry_brain/vci")
devtools::install("~/github/cherry_brain/vci")
roxygen2::roxygenise("~/github/cherry_brain/vci")
devtools::install("~/github/cherry_brain/vci")
roxygen2::roxygenise("~/github/cherry_brain/vci")
devtools::install("~/github/cherry_brain/vci")
pvalue_name=path <- system.file("extdata", "pvalue.nii.gz", package="vci")
pvalue_name
cluster_name=path <- system.file("extdata", "cluster_th_3.2.nii.gz", package="vci")
zstat_name=path <- system.file("extdata", "zstat.nii.gz", package="vci")
mask_name=path <- system.file("extdata", "mask.nii.gz", package="vci")
vci(Pmap = pvalue_name, clusters= cluster_name,
mask=mask_name, Statmap = ztat_name)
library(vci)
vci(Pmap = pvalue_name, clusters= cluster_name,
mask=mask_name, Statmap = ztat_name)
zstat_name
vci(Pmap = pvalue_name, clusters= cluster_name,
mask=mask_name, Statmap = zstat_name)
